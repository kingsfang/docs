
1. MAC

sudo easy_install supervisor
echo_supervisord_conf > /etc/supervisord.conf


vim /etc/supervisord.conf
[include]
files = /etc/supervisor/*.conf

sudo mkdir /etc/supervisor

vim redis.conf
[program:redis]
directory = /usr/local/redis ; 程序的启动目录
command = /usr/local/redis/src/redis/server /usr/local/redis/redis.conf  ; 启动命令，可以看出与手动在命令行启动的命令是一样的
autostart = true     ; 在 supervisord 启动的时候也自动启动
startsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了
autorestart = true   ; 程序异常退出后自动重启
startretries = 3     ; 启动失败自动重试次数，默认是 3
user = leon          ; 用哪个用户启动
redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false
stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB
stdout_logfile_backups = 20     ; stdout 日志文件备份数
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile = /data/logs/usercenter_stdout.log

; 可以通过 environment 来添加需要的环境变量，一种常见的用法是修改 PYTHONPATH
; environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere


2. 启动管理

# start 
supervisord -c /etc/supervisord.conf

# stop
kill -9 `ps -ef | grep supervisord | grep -v grep | awk '{print $2}'`


3. Tomcat前台运行

catalina.sh run

4. 前台运行辅助脚本

set -eu

pidfile="/usr/local/apache-activemq-5.13.0/data/activemq.pid"
command="/usr/local/mq/bin/activemq start"

# Proxy signals
function kill_app(){
    kill $(cat $pidfile)
    exit 0 # exit okay
}
trap "kill_app" SIGINT SIGTERM

# Launch daemon
$command
sleep 2

# Loop while the pidfile and the process exist
while [ -f $pidfile ] && kill -0 $(cat $pidfile) ; do
    sleep 0.5
done
exit 1000 # exit unexpected




