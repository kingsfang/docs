
1. 注册场景

面临的问题：注册的时候需要创建用户，钱包账户，额度账户。 但是这3个模块都是不同的远程服务，并且需要先创建用户然后是其他2个，需要保证
3个实体最终都能创建成功。允许钱包账户和额度账户创建的一定的延迟。但是必须保证最终一致性。 同时在最极端的基础设施故障发生时
需要保留调用日志和后台再次发起的接口。 需要对接到运维中心。

解决方案： 创建用户 + 记录调用日志(钱包和额度)，使用本地事务保证用户创建和日志写入数据库成功。 
然后后台异步发起创建钱包和额度账号的请求。 

适用范围：允许一定的延迟，后续的调用业务上一定会成功，不涉及到协调者状态回退。


2. 



