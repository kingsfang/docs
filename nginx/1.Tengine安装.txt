

############################### 简单安装 ###############################

wget http://tengine.taobao.org/download/tengine-2.2.0.tar.gz
tar -zxvf ./tengine-2.2.0.tar.gz
cd tengine-2.2.0
./configure --without-http_rewrite_module --without-http_ssl_module --without-http_gzip_module
make
make install
/usr/local/nginx/sbin/nginx



############################### 完整安装 ###############################

0. 更新安装系统lib
yum update
yum install -y gcc gcc-c++ autoconf automake pcre-devel openssl-devel zlib-devel

# 软件包都下载到 /usr/local/src

1. PCRE

https://ftp.pcre.org/pub/pcre/pcre-8.36.tar.gz
## wget https://ftp.pcre.org/pub/pcre/pcre2-10.23.tar.gz
tar -zxvf ./pcre-8.36.tar.gz
cd pcre-8.36
./configure --prefix=/usr/local/pcre
make && make install

2. OpenSSL

wget http://www.openssl.org/source/openssl-1.0.2.tar.gz
#wget https://www.openssl.org/source/openssl-1.1.0e.tar.gz
tar -zxvf ./openssl-1.0.2.tar.gz
cd openssl-1.0.2
./config --prefix=/usr/local/openssl
make && make install

3. zlib

##wget http://zlib.net/zlib-1.2.8.tar.gz
wget http://www.zlib.net/zlib-1.2.11.tar.gz
tar -zxvf ./zlib-1.2.8.tar.gz
cd zlib-1.2.8
./configure --prefix=/usr/local/zlib
make && make install

4. Jemalloc

wget http://www.canonware.com/download/jemalloc/jemalloc-3.6.0.tar.bz2
#wget http://www.canonware.com/download/jemalloc/jemalloc-4.2.1.tar.bz2
tar -jxvf ./jemalloc-3.6.0.tar.bz2
cd jemalloc-3.6.0
./configure --prefix=/usr/local/jemalloc
make && make install


5. Tengine

# 用户添加
groupadd nginx
useradd -g nginx nginx

wget http://tengine.taobao.org/download/tengine-2.2.0.tar.gz
tar -zxvf ./tengine-2.2.0.tar.gz
cd tengine-2.2.0

./configure --prefix=/usr/local/nginx \
--with-pcre=/usr/local/src/pcre-8.36 \
--with-openssl=/usr/local/src/openssl-1.0.2 \
--with-jemalloc=/usr/local/src/jemalloc-3.6.0 \
--with-http_gzip_static_module \
--with-http_realip_module \
--with-http_stub_status_module \
--with-http_concat_module \
--with-zlib=/usr/local/src/zlib-1.2.11

make
make install



############################### 开机启动 ############################### ???

#vim /etc/rc.d/init.d/nginx 
#编辑启动文件添加下面内容
#!/bin/bash
# nginx Startup script for the Nginx HTTP Server
# it is v.0.0.2 version.
# chkconfig: - 85 15
# description: Nginx is a high-performance web and proxy server.
# It has a lot of features, but it's not for everyone.
# processname: nginx
# pidfile: /var/run/nginx.pid
# config: /usr/local/nginx/conf/nginx.conf
nginxd=/usr/local/nginx/sbin/nginx
nginx_config=/usr/local/nginx/conf/nginx.conf
nginx_pid=/usr/local/nginx/logs/nginx.pid
RETVAL=0
prog="nginx"
# Source function library.
. /etc/rc.d/init.d/functions
# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0
[ -x $nginxd ] || exit 0
# Start nginx daemons functions.
start() {
if [ -e $nginx_pid ];then
echo "nginx already running...."
exit 1
fi
echo -n $"Starting $prog: "
daemon $nginxd -c ${nginx_config}
RETVAL=$?
echo
[ $RETVAL = 0 ] && touch /var/lock/subsys/nginx
return $RETVAL
}
# Stop nginx daemons functions.
stop() {
echo -n $"Stopping $prog: "
killproc $nginxd
RETVAL=$?
echo
[ $RETVAL = 0 ] && rm -f /var/lock/subsys/nginx /usr/local/nginx/logs/nginx.pid
}
reload() {
echo -n $"Reloading $prog: "
#kill -HUP `cat ${nginx_pid}`
killproc $nginxd -HUP
RETVAL=$?
echo
}
# See how we were called.
case "$1" in
start)
start
;;
stop)
stop
;;
reload)
reload
;;
restart)
stop
start
;;
status)
status $prog
RETVAL=$?
;;
*)
echo $"Usage: $prog {start|stop|restart|reload|status|help}"
exit 1
esac
exit $RETVAL
保存退出
复制代码 代码如下:

chmod 775 /etc/rc.d/init.d/nginx #赋予文件执行权限
chkconfig nginx on #设置开机启动
service nginx restart #启动服务






